test.list <- 'test,test'
length(test.list)
gradeSummary <- function(x){
if(x >= 90){
return(list($letter.grade <- 'A','passed'))
}else if(x >= 80 && x < 90){
return(list('B','passed'))
}else{
return(list('F','fail'))
}
}
gradeSummary <- function(x){
if(x >= 90){
return(list(letter.grade <- 'A','passed'))
}else if(x >= 80 && x < 90){
return(list('B','passed'))
}else{
return(list('F','fail'))
}
}
gradeSummary <- function(x){
if(x >= 90){
return(list(letter.grade <- 'A', passed <- 'passed'))
}else if(x >= 80 && x < 90){
return(list(letter.grade <- 'B', passed <- 'passed'))
}else{
return(list(letter.grade <- 'F', passed <- 'fail'))
}
}
gradeSummary(100)
gradeSummary(10)
gradeSummary(1)
gradeSummary(88)
runif(800)
runif
for(i in 1:10){
print(i)
}
test.list <- list(letter.grade = "F", passed = FALSE)
for(i in 1){
print(test.list[i])
}
for(i in 1){
print(test.list[[i]])
}
for(i in 1){
print(test.list[i])
}
for(i in 2){
print(test.list[i])
}
matrix(5,5)
matrix(5,5,5)
matrix(5,5,1:25)
matrix(5,5,1)
matrix(0,5,5)
matrix(1,5,5)
matrix(1:25,5,5)
matrix(1:25,5,5, byrow=TRUE)
c(1:10, 100:110)
tt.mat <- matrix(c(1:10, 21:30), nrow = 2, ncol = 10)
tt.mat
library("ggplot2")
library("ggthemes")
library("ggthemes")
install.packages("ggthemes")
library("ggthemes")
library("scales")
library("dplyr")
library("dplyr")
install.packages("dplyr")
library("dplyr")
library("mice")
library("randomForest")
install.packages("mice")
library("mice")
library("randomForest")
train <- read.csv("/Users/songminseok/Downloads/train.csv", stringsAsFactors = F)
test <- read.csv("/Users/songminseok/Downloads/test.csv", stringsAsFactors = F)
head(train)
test <- read.csv("/Users/songminseok/Downloads/test.csv", stringsAsFactors = F)
head(train)
full <- bind_rows(train, test)
nrow(train)
nrow(test)
nrow(train + test)
full <- bind_rows(train, test)
nrow(full)
str(full)
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
table(full$Sex, full$Title)
rare_title <- c('Dona', 'Lady', 'the Countess', 'Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
full$Title[full$Title == 'Mile']               <- 'Miss'
full$Title[full$Title == 'Ms']                 <- 'Miss'
full$Title[full$Title == 'Mme']                <- 'Miss'
full$Title[full$Title %in% rare_title]         <- 'Miss'
table(full$Sex, full$Title)
full$Title %in% rare_title
full$Title[full$Title %in% rare_title]
?"%in%"
full$Surname <- sapply(full$Name
function(x) strsplit(x, split = '[,.]')[[1]][1])
full$Surname <- sapply(full$Name,
function(x) strsplit(x, split = '[,.]')[[1]][1])
cat(paste('We have <b>', nlevels(factor(full$Surname)), '</b> unique surnames. I would be
interested to infer ethnicity based on surname --- another time.'))
full$Fsize <- full$SibSp + full$Parch + 1
full$Fsize
full$Family <- paste(full$Surname, full$Fsize, sep='_')
full$Family
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous(breaks = c(1:11)) +
theme_few()
?"aes"
full$FsizeD[full$Fsize == 1]
full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'small'
full$FsizeD[full$Fsize == 1] <- 'singleton'
full$FsizeD[full$Fsize > 4] <- 'large'
mosaicplot(table(full$FsizeD, full$Survived), main = 'Family Size by Survival', shade = TRUE)
full$Cabin[1:28]
strsplit(full$Cabin[2], NULL)[[1]]
strsplit(full$Cabin[2], NULL)[[2]]
strsplit(full$Cabin[2], NULL)[[0]]
strsplit(full$Cabin[2], NULL)[[1]]
sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1])
factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
full$Deck <- factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
full$Deck
full[c(62, 830), 'Embarked']
full[c(62, 830), 'Embarked']
full[c(62, 830), 'Embarked']
c(62, 830)
full[c(62, 830), 'Embarked']
cat(paste('We will infer their values for **embarkment** based on present data that we can
imagine may be relevant: **passenger class** and **fare**. We see that they paid<b> $',
full[c(62, 830), 'Fare'][[1]][1], '</b>and<b> $', full[c(62, 830), 'Fare'][[1]][2], '</b>respectively
and their classes are<b>', full[c(62, 830), 'Pclass'][[1]][1], '</b>and<b>', full[c(62, 830), 'Pclass'][[1]][2],
'</b>. So from where did they embark?'))
strsplit(full$Cabin[2], NULL)[[1]]
full$Deck <- factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
full[c(62, 830), 'Embarked']
?"%>%"
'??%>%'
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
embark_fare <- full %>% filter(PassengerId != 62 & PassengerId != 830)
filter(PassengerId != 62 & PassengerId != 830)
embark_fare <- full %>% filter(PassengerId != 62 & PassengerId != 830)
embark_fare <- full %>% filter(PassengerId != 62 & PassengerId != 830)
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
embark_fare
%>%
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
library("magrittr")
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
embark_fare
embark_fare <- full %>% filter(PassengerId != 62 & PassengerId != 830)
embark_fare <- full %>% filter(full$PassengerId != 62 & full$PassengerId != 830)
embark_fare
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill=factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour = 'red', linetype = 'dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill=factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour = 'red', linetype = 'dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
library("ggplot2")
library("ggthemes")
library("scales")
library("dplyr")
library("mice")
library("randomForest")
library("magrittr")
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill=factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour = 'red', linetype = 'dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
library("ggplot2")
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
embark_fare <- full %>% filter(full$PassengerId != 62 & full$PassengerId != 830)
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
c(1, 10)
full$Embarked[c(62, 830)] <- 'C'
full[1044,]
ggplot(full[full$Pclass == '3' & full$Embarked == 'S', ],
aes(x = Fare)) +
geom_density(fill = '#99d6ff', alpha=0.4) +
geom_vline(aes(xintercept=median(Fare, na.rm=T)),
colour='red', linetype='dashed', lwd=1) +
scale_x_continuous(labels=dollar_format()) +
theme_few()
full$Fare[1044] <- median(full[full$Pclass == '3' & full$Embarked == 'S', ]$Fare, na.rm = TRUE)
sum(is.na(full$Age))
factor_vars <- c('PassengerId', 'Pclass', 'Sex', 'Embarked',
'Title', 'Surname', 'Family', 'FsizeD')
full[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))
set.seed(129)
(full[, !names(full) %in% c('PassengerId', 'Name', 'Ticket', 'Cabin', 'Family',
'Surname', 'Survived')], method='rf')
mice_mod <- mice(full[, !names(full) %in% c('PassengerId', 'Name', 'Ticket', 'Cabin', 'Family',
'Surname', 'Survived')], method='rf')
mice_output <- complete(mice_mod)
mice_output
per(mfrow=c(1,2))
par(mfrow=c(1,2))
par(mfrow=c(1,2))
hist(full$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
hist(mice_output, freq=F, main='Age: MICE Output',
col='lightgreen', ylim=c(0,0.04))
hist(mice_output$Age, freq=F, main='Age: MICE Output',
col='lightgreen', ylim=c(0,0.04))
full$Age <- mice_output$Age
sum(is.na(full$Age))
ggplot(full[1:891,], aes(Age, fill = factor(Survived))) +
geom_histogram() +
# I include Sex since we know (a priori) it's a significant predictor
facet_grid(.-Sex) +
theme_few()
ggplot(full[1:891,], aes(Age, fill = factor(Survived))) +
geom_histogram() +
# I include Sex since we know (a priori) it's a significant predictor
facet_grid(.~Sex) +
theme_few()
full[1:891,]
full$Child[full$Age < 18] <- 'Child'
full$Child[full$Age >= 18] <- 'Adult'
table(full$Child, full$Survived)
# Adding Mother variable
full$Mother <- 'Not Mother'
full$Child <- factor(full$Child)
full$Mother <- factor(full$Mother)
factor(full$Child)
full$Child
md.pattern(full)
md.pattern(full)
write.csv("/Users/songminseok/Downloads/full.csv")
write.csv(full, "/Users/songminseok/Downloads/full.csv")
train <- full[1:891,]
test <- full[892:1309,]
set.seed(754)
rf_model <- randomForest(factor(Survived) - Pclass + Sex + Age +SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
rf_model <- randomForest(factor(train$Survived) - Pclass + Sex + Age +SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
rf_model <- randomForest(train, factor(Survived) - Pclass + Sex + Age +SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother)
rf_model <- randomForest(data = train, factor(Survived) - Pclass + Sex + Age +SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother)
rf_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
rf_model
plot(rf_model, ylim=c(0,0.36))
legend('topright', colnames(rf_model$err.rate), col=1:3, fill=1:3)
importance <- importance(rf_model)
varImportance <- data.frame(Variables = row.names(importance),
Importance = round(importance[ , 'MeanDecreaseGini'],2))
rankImportance <- varImportance %>%
mutate(Rank = paste0('#', dense_rank(desc(Importance))))
ggplot(rankImportance, aes(x = reorder(Variables, Importance),
y = importance, fill = importance)) +
geom_bar(stat='identity') +
geom_text(aes(x = Variables, y = 0.5, label = Rank),
hjust=0, vjust=0.55, size=4, colour = 'red') +
labs(x = 'Variables') +
coord_flip() +
theme_few()
prediction <- predict(rf_model, test)
prediction <- predict(rf_model, test)
solution <- data.frame(PassengerID = test$PassengerId, Survived = prediction)
write.csv(solution, file = 'rf_mod_Solution.csv', row.names = F)
write.csv(solution, file = '/Users/songminseok/Downloads/rf_mod_Solution.csv', row.names = F)
library(data.table)
install.packages("data.table")
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
scale_y_log10()
qqplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
scale_y_log10()
train
qqplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
scale_y_log10()
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
scale_y_log10()
library('ggplot')
install.packages('ggplot')
library('ggplot')
ggplot2(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
scale_y_log10()
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
scale_y_log10()
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('grid') # visualisation
library('gridExtra') # visualisation
library('corrplot') # visualisation
library('VIM') # missing values
library('dplyr') # data manipulation
library('readr') # data input
library('stringr') # string manipulation
library('forcats') # factor manipulation
library('modelr') # factor manipulation
library('randomForest') # classification
library('xgboost') # classification
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
scale_y_log10()
train %>%
select(-PassengerId, -Name, -Cabin, -Ticket) %>%
mutate(Sex = fct_recode(Sex,
"0" = "male",
"1" = "female")
) %>%
mutate(Sex = as.integer(Sex),
Pclass = as.integer(Pclass),
Survived = as.integer(Survived),
Embarked = as.integer(Embarked)) %>%
cor(use="complete.obs") %>%
corrplot(type="lower", diag=FALSE)
train %>%
select(-PassengerId, -Name, -Cabin, -Ticket) %>%
mutate(Sex = fct_recode(Sex,
"0" = "male",
"1" = "female")
) %>%
mutate(Sex = as.integer(Sex),
Pclass = as.integer(Pclass),
Survived = as.integer(Survived),
Embarked = as.integer(Embarked)) %>%
cor(use="complete.obs") %>%
corrplot(type="lower", diag=FALSE)
train %>%
select(-PassengerId, -Name, -Cabin, -Ticket) %>%
mutate(Sex = fct_recode(Sex,
"0" = "male",
"1" = "female")
) %>%
mutate(Sex = as.integer(Sex),
Pclass = as.integer(Pclass),
Survived = as.integer(Survived),
Embarked = as.integer(Embarked)) %>%
cor(use="complete.obs") %>%
corrplot(type="lower", diag=FALSE)
train %>%
select(-PassengerId, -Name, -Cabin, -Ticket) %>%
mutate(Sex = fct_recode(Sex,
"0" = "male",
"1" = "female")
) %>%
mutate(Sex = as.integer(Sex),
Pclass = as.integer(Pclass),
Survived = as.integer(Survived),
Embarked = as.integer(Embarked)) %>%
cor(use="complete.obs") %>%
corrplot(type="lower", diag=FALSE)
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
scale_y_log10()
train %>%
select(-PassengerId, -Name, -Cabin, -Ticket) %>%
mutate(Sex = fct_recode(Sex,
"0" = "male",
"1" = "female")
) %>% mutate(Sex = as.integer(Sex),
Pclass = as.integer(Pclass),
Survived = as.integer(Survived),
Embarked = as.integer(Embarked)) %>%
cor(use="complete.obs") %>%
corrplot(type="lower", diag=FALSE)
train %>%
select(-PassengerId, -Name, -Cabin, -Ticket) %>%
mutate(Sex = fct_recode(Sex,
"0" = "male",
"1" = "female")
) %>% mutate(Sex = as.integer(Sex),
Pclass = as.integer(Pclass),
Survived = as.integer(Survived),
Embarked = as.integer(Embarked)) %>% cor(use="complete.obs") %>%
corrplot(type="lower", diag=FALSE)
train
train %>%
select(-PassengerId, -Name, -Cabin, -Ticket, -Deck) %>%
mutate(Sex = fct_recode(Sex,
"0" = "male",
"1" = "female")
) %>% mutate(Sex = as.integer(Sex),
Pclass = as.integer(Pclass),
Survived = as.integer(Survived),
Embarked = as.integer(Embarked)) %>% cor(use="complete.obs") %>%
corrplot(type="lower", diag=FALSE)
train
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
scale_y_log10()
Survived
train$Survived
p_emb = ggplot(train, aes(Embarked, fill = Survived)) +
geom_bar(stat='count', position='fill') +
labs(x = 'Embarked') +
theme(legend.position = "none")
p_emb
train <- read_csv('datasets/train.csv')
test <- read_csv('datasets/test.csv')
setwd('/Users/songminseok/R/titanic')
train <- read_csv('datasets/train.csv')
test <- read_csv('datasets/test.csv')
train <- train %>% mutate(
Survived = factor(Survived),
Pclass = factor(Pclass),
Embarked = factor(Embarked),
Sex = factor(Sex)
)
test <- test %>% mutate(
Pclass = factor(Pclass),
Embarked = factor(Embarked),
Sex = factor(Sex)
)
combine <- bind_rows(train, test)
summary(combine)
glimpse(combine)
train %>%
count(Survived)
aggr(combine, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
p_age = ggplot(train) +
geom_freqpoly(mapping = aes(x = Age, color = Survived), binwidth = 1) +
guides(fill=FALSE) +
theme(legend.position = "none")
p_age
train %>%
group_by(Survived) %>%
summarise(median_age = median(Age, na.rm=TRUE))
train %>%
group_by(Survived) %>%
summarise(median_age = median(Age, na.rm=TRUE))
train %>%
group_by(Survived, Sex) %>%
count(Sex)
train %>% mutate(single = SibSp==0) %>% count(single) %>% group_by(single) %>% mutate(freq = n/nrow(train))
train %>% mutate(single = Parch==0) %>% count(single) %>% group_by(single) %>% mutate(freq = n/nrow(train))
train %>%
select(-PassengerId, -Name, -Cabin, -Ticket, -Deck) %>%
mutate(Sex = fct_recode(Sex,
"0" = "male",
"1" = "female")
) %>% mutate(Sex = as.integer(Sex),
Pclass = as.integer(Pclass),
Survived = as.integer(Survived),
Embarked = as.integer(Embarked)) %>% cor(use="complete.obs") %>%
corrplot(type="lower", diag=FALSE)
train %>%
select(-PassengerId, -Name, -Cabin, -Ticket) %>%
mutate(Sex = fct_recode(Sex,
"0" = "male",
"1" = "female")
) %>% mutate(Sex = as.integer(Sex),
Pclass = as.integer(Pclass),
Survived = as.integer(Survived),
Embarked = as.integer(Embarked)) %>% cor(use="complete.obs") %>%
corrplot(type="lower", diag=FALSE)
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
scale_y_log10()
train %>%
ggplot(aes(Fare, fill=Pclass)) +
geom_density(alpha = 0.5) +
scale_x_log10() +
facet_wrap(~ Survived, ncol = 1)
train %>%
filter(Embarked %in% c("S","C","Q")) %>%
ggplot() +
geom_bar(aes(Embarked, fill = Pclass), position = "dodge") +
facet_grid(~ Survived)
Embarked
train$Embarked
